@using System.Web.Mvc.Html
@using Dragonfly.NetModels;
@using Dragonfly.UmbracoSiteTester
@using Dragonfly.UmbracoSiteTester.Models

@inherits Umbraco.Web.Mvc.UmbracoViewPage<StatusMessage>

@{
    var status = Model;

    //var DisplayTitle = Dragonfly.Umbraco7Helpers.Mvc.GetSafeViewDataString(ViewData, "DisplayTitle");
    var SearchResultsSet = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewData(ViewData, "SearchResultsSet") as SearchResultsSet;
    var ResultSetFilename = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "ResultSetFilename");
    var ResultSetDisplayName = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "ResultSetDisplayName");
    var SearchPhrase = Dragonfly.UmbracoHelpers.Mvc.GetSafeViewDataString(ViewData, "SearchPhrase");

    //Column Widths
    var col1Class = "col-sm-3";
    var col2Class = "col-sm-9";

    var pvException = HtmlHelpers.GetViewsPath() + "Partials/ExceptionDetailsLink.cshtml";
    var pvSS = HtmlHelpers.GetViewsPath() + "Partials/StylesScripts.cshtml";
    var pvStatus = HtmlHelpers.GetViewsPath() + "Partials/StatusMessage.cshtml";
    var pvFilesList = HtmlHelpers.GetViewsPath() + "Partials/FilesList.cshtml";
}
<!DOCTYPE html>
<html>
<head>
    @Html.Partial(pvSS, "styles")
</head>
<body>
    <div class="container">

        <div class="d-inline-flex p-2" style="padding: .5em 0;">
            <a class="btn btn-sm btn-primary mr-2" href="/umbraco/backoffice/Dragonfly/SiteTester//Start">Back to Start</a>
            <a class="btn btn-sm btn-success mr-2" href="/umbraco/backoffice/Dragonfly/SiteTester//TestAllNodesAndSave">Test All Nodes Now</a>
        </div>
        <h1>Test Results</h1>

        @if (!status.Success)
        {
            @Html.Partial(pvStatus, status)
        }
        else
        {
            if (SearchResultsSet != null)
            {
                var resultsDate = SearchResultsSet.SearchStartTimestamp != DateTime.MinValue ? HtmlHelpers.FormatUtcDateTime(SearchResultsSet.SearchStartTimestamp.ToUniversalTime()) : "Unknown";
                var durationSpan = (SearchResultsSet.SearchEndTimestamp - SearchResultsSet.SearchStartTimestamp);

                <div class="card card-default">
                    <h5 class="card-header">Summary</h5>
                    <div class="card-body">
                        <dl class="row">
                            <dt class="@col1Class">Date/Time</dt>
                            <dd class="@col2Class">@resultsDate</dd>
                        </dl>
                        <dl class="row">
                            <dt class="@col1Class">Operation Duration</dt>
                            <dd class="@col2Class">@durationSpan.TotalMinutes minutes</dd>
                        </dl>
                        <dl class="row">
                            <dt class="@col1Class">Search Phrase</dt>
                            <dd class="@col2Class">@SearchPhrase</dd>
                        </dl>
                        <dl class="row">
                            <dt class="@col1Class">Test Result Set Searched</dt>
                            <dd class="@col2Class">@ResultSetDisplayName (@SearchResultsSet.SiteDomain)</dd>
                        </dl>
                        <dl class="row">
                            <dt class="@col1Class">Results</dt>
                            <dd class="@col2Class">
                                @if (SearchResultsSet.Results.Any())
                                {<text>@SearchResultsSet.Results.Count() result(s) found</text>}
                            else
                            {<text>No results found</text>}
                            </dd>
                        </dl>
                    </div>
                </div>

                <h2>Results</h2>

                var counter = 0;
                <table id="umbracodata" class="table table-striped table-bordered table-hover table-sm" cellspacing="0" style="width: 100%">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Actions</th>
                            <th>Result</th>
                            <th>Status Code</th>
                            <th>On-page Errors</th>
                            <th>Node Name</th>
                            <th>DocType</th>
                            <th>Node ID</th>
                            <th>Exception</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var result in SearchResultsSet.Results)
                        {
                            counter++;

                            <tr>
                                <td>@counter</td>
                                <td>
                                    <!--Actions-->
                                    <a href="/umbraco/#/content/content/edit/@result.NodeId" target="_blank">Edit</a>
                                    @if (result.Url != "")
                                    {
                                        <span> | </span><a href="@result.Url" target="_blank">View</a>
                                    }
                                </td>
                                <td>@result.Result</td>
                                <td>@result.StatusCode</td>
                                <td>
                                    @if (result.ContentErrorMatches != null)
                                    {
                                        <span>@Html.Raw(string.Join("<br/>", result.ContentErrorMatches))</span>
                                    }
                                </td>
                                <td>@result.NodeName</td>
                                <td>@result.ContentTypeAlias</td>
                                <td>@result.NodeId</td>
                                <td>
                                    @if (result.ErrorException != null)
                                    {
                                        <pre>@result.ErrorException.Message</pre>
                                        @Html.Partial(pvException, result.ErrorException)
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            }
            else
            {
                <i style="color:red;">There is no data available currently.</i>
            }
        }
    </div>

    @Html.Partial(pvSS, "scripts")

    <script type="text/javascript">
        $(document).ready(function () {

            // Setup - add a text input to each footer cell
            $('#umbracodata tfoot th').each(function () {
                var title = $(this).text();
                $(this).html('<input type="text" placeholder="Search ' + title + '" />');
            });

            $('#umbracodata').DataTable({
                "lengthMenu": [[10, 25, 50, - 1], [10, 25, 50, "All"]]
            });

            // Apply the search
            table.columns().every(function () {
                var that = this;

                $('input', this.footer()).on('keyup change', function () {
                    if (that.search() !== this.value) {
                        that
                            .search(this.value)
                            .draw();
                    }
                });
            });

        });
    </script>
</body>
</html>
